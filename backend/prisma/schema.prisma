// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  apiKey    String   @unique @map("api_key")
  createdAt DateTime @default(now()) @map("created_at")
  
  jobs      Job[]
  
  @@map("users")
}

model JobBoard {
  id        String   @id @default(uuid())
  name      String
  baseUrl   String   @map("base_url")
  postUrl   String   @map("post_url")
  selectors Json
  enabled   Boolean  @default(true)
  
  postings  JobPosting[]
  
  @@map("job_boards")
}

model Job {
  id           String   @id @default(uuid())
  userId       String   @map("user_id")
  title        String
  description  String   @db.Text
  location     String
  salaryMin    Int?     @map("salary_min")
  salaryMax    Int?     @map("salary_max")
  company      String
  contactEmail String   @map("contact_email")
  status       String   @default("pending") // pending, posting, completed, failed
  createdAt    DateTime @default(now()) @map("created_at")
  
  user         User         @relation(fields: [userId], references: [id])
  postings     JobPosting[]
  
  @@map("jobs")
}

model JobPosting {
  id           String    @id @default(uuid())
  jobId        String    @map("job_id")
  boardId      String    @map("board_id")
  status       String    @default("pending") // pending, posting, success, failed
  externalUrl  String?   @map("external_url")
  errorMessage String?   @map("error_message") @db.Text
  postedAt     DateTime? @map("posted_at")
  createdAt    DateTime  @default(now()) @map("created_at")
  
  job          Job       @relation(fields: [jobId], references: [id], onDelete: Cascade)
  board        JobBoard  @relation(fields: [boardId], references: [id])
  
  @@map("job_postings")
}
